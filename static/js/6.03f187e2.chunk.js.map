{"version":3,"sources":["pages/Pool/RemoveLiquidity.js","assets/svg/SVGArrowDown.js","components/ContextualInfo/index.js"],"names":["ALLOWED_SLIPPAGE","ethers","utils","bigNumberify","DEADLINE_FROM_NOW","GAS_MARGIN","BlueSpan","styled","span","theme","royalBlue","DownArrowBackground","div","flexRowNoWrap","DownArrow","ArrowDown","active","doveGray","RemoveLiquidityOutput","RemoveLiquidityOutputText","RemoveLiquidityOutputPlus","SummaryPanel","flexColumnNoWrap","LastSummaryText","ExchangeRateWrapper","ExchangeRate","Flex","getMarketRate","reserveETH","reserveToken","decimals","inputValue","inputDecimals","outputValue","outputDecimals","invert","factor","pow","mul","getExchangeRate","calculateSlippageBounds","value","offset","minimum","sub","maximum","add","lt","constants","Zero","gt","MaxUint256","RemoveLiquidity","params","useWeb3Context","library","account","t","useTranslation","addTransaction","useTransactionAdder","useEffect","createBrowserHistory","push","window","location","pathname","useState","poolTokenAddress","outputCurrency","setOutputCurrency","poolTokenAmount","setValue","inputError","setInputError","valueParsed","setValueParsed","parsedValue","parseUnits","useTokenDetails","symbol","exchangeAddress","totalPoolTokens","setTotalPoolTokens","poolTokenBalance","useAddressBalance","exchangeETHBalance","exchangeTokenBalance","exchange","useExchangeContract","ownershipPercentage","isZero","undefined","ownershipPercentageFormatted","amountFormatter","ETHOwnShare","TokenOwnShare","ETHPer","tokenPer","ethWithdrawn","tokenWithdrawn","ethWithdrawnMin","tokenWithdrawnMin","fetchPoolTokens","useCallback","totalSupply","then","a","ReactGA","event","category","action","deadline","Math","ceil","Date","now","estimate","removeLiquidity","estimatedGasLimit","gasLimit","calculateGasMargin","response","on","removeListener","b","text","renderTransactionDetails","min","isActive","isValid","marketRate","marketRateInverted","allBalances","useFetchAllBalances","title","extraText","formatBalance","extraTextClickHander","valueToSet","onCurrencySelected","onValueChange","errorMessage","selectedTokenAddress","alt","description","key","renderInput","disableTokenSelect","disableUnlock","hideBottom","contextualInfo","isError","openDetailsText","closeDetailsText","renderSummary","disabled","onClick","SVGArrowDown","props","width","height","viewBox","fill","d","SummaryWrapper","error","salmonRed","Details","concreteGray","SummaryWrapperContainer","ColoredDropup","highSlippageWarning","rest","ColoredDropdown","ContextualInfo","state","showDetails","this","setState","prevState","renderDetails","Component","defaultProps"],"mappings":"svDAsBA,IAAMA,EAAmBC,SAAOC,MAAMC,aAAa,KAG7CC,EAAoB,IAGpBC,EAAaJ,SAAOC,MAAMC,aAAa,KAEvCG,EAAWC,IAAOC,KAAV,IACH,qBAAGC,MAAkBC,YAG1BC,EAAsBJ,IAAOK,IAAV,IACrB,qBAAGH,MAAkBI,gBAKnBC,EAAYP,YAAOQ,IAAPR,CAAH,IACX,qBAAGE,MAAkBI,eACd,gBAAGJ,EAAH,EAAGA,MAAH,SAAUO,OAAuBP,EAAMC,UAAYD,EAAMQ,WAO9DC,EAAwBX,IAAOK,IAAV,IACvB,qBAAGH,MAAkBI,gBAInBM,EAA4BZ,IAAOK,IAAV,KAMzBQ,EAA4Bb,IAAOK,IAAV,KAMzBS,EAAed,IAAOK,IAAV,IACd,qBAAGH,MAAkBa,mBAInBC,EAAkBhB,IAAOK,IAAV,KAIfY,EAAsBjB,IAAOK,IAAV,IACrB,qBAAGH,MAAkBI,eAEd,qBAAGJ,MAAkBQ,WAK1BQ,EAAelB,IAAOC,KAAV,IAGP,qBAAGC,MAAkBQ,WAG1BS,EAAOnB,IAAOK,IAAV,KAqCV,SAASe,EAAcC,EAAYC,EAAcC,GAC/C,OA5BF,SAAyBC,EAAYC,EAAeC,EAAaC,GAAiC,IAAjBC,EAAgB,wDAC/F,IACE,GACEJ,IACCC,GAAmC,IAAlBA,IAClBC,IACCC,GAAqC,IAAnBA,GACnB,CACA,IAAME,EAASnC,SAAOC,MAAMC,aAAa,IAAIkC,IAAIpC,SAAOC,MAAMC,aAAa,KAE3E,OAAIgC,EACKJ,EACJO,IAAIF,GACJxB,IAAIqB,GACJK,IAAIrC,SAAOC,MAAMC,aAAa,IAAIkC,IAAIpC,SAAOC,MAAMC,aAAa+B,KAChEtB,IAAIX,SAAOC,MAAMC,aAAa,IAAIkC,IAAIpC,SAAOC,MAAMC,aAAa6B,KAE5DC,EACJK,IAAIF,GACJxB,IAAImB,GACJO,IAAIrC,SAAOC,MAAMC,aAAa,IAAIkC,IAAIpC,SAAOC,MAAMC,aAAa6B,KAChEpB,IAAIX,SAAOC,MAAMC,aAAa,IAAIkC,IAAIpC,SAAOC,MAAMC,aAAa+B,MAGvE,WAIKK,CAAgBX,EAAY,GAAIC,EAAcC,EADoB,yDAI3E,SAASU,EAAwBC,GAC/B,GAAIA,EAAO,CACT,IAAMC,EAASD,EAAMH,IAAItC,GAAkBY,IAAIX,SAAOC,MAAMC,aAAa,MACnEwC,EAAUF,EAAMG,IAAIF,GACpBG,EAAUJ,EAAMK,IAAIJ,GAC1B,MAAO,CACLC,QAASA,EAAQI,GAAG9C,SAAO+C,UAAUC,MAAQhD,SAAO+C,UAAUC,KAAON,EACrEE,QAASA,EAAQK,GAAGjD,SAAO+C,UAAUG,YAAclD,SAAO+C,UAAUG,WAAaN,GAGnF,MAAO,GAII,SAASO,GAAT,GAAsC,IAAXC,EAAU,EAAVA,OAAU,EACbC,2BAA7BC,EAD0C,EAC1CA,QAASC,EADiC,EACjCA,QAASxC,EADwB,EACxBA,OAClByC,EAAMC,cAAND,EAEFE,EAAiBC,cAGvBC,oBAAU,WACQC,cACRC,KAAKC,OAAOC,SAASC,SAAW,KACvC,IAV+C,MAYNC,mBAASd,EAAOe,kBAZV,mBAY3CC,EAZ2C,KAY3BC,EAZ2B,OAaxBH,mBAASd,EAAOkB,gBAAkBlB,EAAOkB,gBAAkB,IAbnC,mBAa3C9B,EAb2C,KAapC+B,EAboC,OAcdL,qBAdc,mBAc3CM,EAd2C,KAc/BC,GAd+B,QAeZP,qBAfY,qBAe3CQ,GAf2C,MAe9BC,GAf8B,MAiBlDf,oBAAU,WACR,IACE,IAAMgB,EAAc5E,SAAOC,MAAM4E,WAAWrC,EAAO,IACnDmC,GAAeC,GACf,SACc,KAAVpC,GACFiC,GAAcjB,EAAE,kBAIpB,OAAO,WACLiB,KACAE,OAED,CAACnB,EAAGhB,IA/B2C,OAiCJsC,YAAgBV,GAAtDW,GAjC0C,GAiC1CA,OAAQlD,GAjCkC,GAiClCA,SAAUmD,GAjCwB,GAiCxBA,gBAjCwB,GAmCJd,qBAnCI,qBAmC3Ce,GAnC2C,MAmC1BC,GAnC0B,MAoC5CC,GAAmBC,YAAkB7B,EAASyB,IAC9CK,GAAqBD,YAAkBJ,GAAiB,OACxDM,GAAuBF,YAAkBJ,GAAiBZ,GAGhER,oBAAU,WACJc,IAAeS,KACbT,GAAYzB,GAAGkC,IACjBV,GAAcjB,EAAE,wBAEhBiB,GAAc,QAGjB,CAACU,GAAkB3B,EAAGkB,KAEzB,IAAMa,GAAWC,YAAoBR,IAE/BS,GACJN,IAAoBF,KAAoBA,GAAgBS,SACpDP,GAAiB9C,IAAIrC,SAAOC,MAAMC,aAAa,IAAIkC,IAAIpC,SAAOC,MAAMC,aAAa,MAAMS,IAAIsE,SAC3FU,EACAC,GAA+BH,IAAuBI,YAAgBJ,GAAqB,GAAI,GAE/FK,GACJT,IACAI,IACAJ,GAAmBhD,IAAIoD,IAAqB9E,IAAIX,SAAOC,MAAMC,aAAa,IAAIkC,IAAIpC,SAAOC,MAAMC,aAAa,MACxG6F,GACJT,IACAG,IACAH,GAAqBjD,IAAIoD,IAAqB9E,IAAIX,SAAOC,MAAMC,aAAa,IAAIkC,IAAIpC,SAAOC,MAAMC,aAAa,MAE1G8F,GACJX,IAAsBJ,KAAoBA,GAAgBS,SACtDL,GAAmBhD,IAAIrC,SAAOC,MAAMC,aAAa,IAAIkC,IAAIpC,SAAOC,MAAMC,aAAa,MAAMS,IAAIsE,SAC7FU,EACAM,GACJX,IAAwBL,KAAoBA,GAAgBS,SACxDJ,GAAqBjD,IAAIrC,SAAOC,MAAMC,aAAa,IAAIkC,IAAIpC,SAAOC,MAAMC,aAAa,MAAMS,IAAIsE,SAC/FU,EAEAO,GACJF,IAAUtB,GACNsB,GAAO3D,IAAIqC,IAAa/D,IAAIX,SAAOC,MAAMC,aAAa,IAAIkC,IAAIpC,SAAOC,MAAMC,aAAa,WACxFyF,EACAQ,GACJF,IAAYvB,GACRuB,GAAS5D,IAAIqC,IAAa/D,IAAIX,SAAOC,MAAMC,aAAa,IAAIkC,IAAIpC,SAAOC,MAAMC,aAAa,WAC1FyF,EAEAS,GAAkBF,GAAe3D,EAAwB2D,IAAcxD,aAAUiD,EACjFU,GAAoBF,GAAiB5D,EAAwB4D,IAAgBzD,aAAUiD,EAEvFW,GAAkBC,sBAAY,WAC9BhB,IACFA,GAASiB,cAAcC,KAAK,SAAAD,GAC1BtB,GAAmBsB,MAGtB,CAACjB,KA/F8C,6CAyGlD,8BAAAmB,EAAA,4DACEC,IAAQC,MAAM,CACZC,SAAU,OACVC,OAAQ,oBAGJC,EAAWC,KAAKC,KAAKC,KAAKC,MAAQ,KAAQhH,EANlD,SAQkCoF,GAAS6B,SAASC,gBAChD3C,GACA0B,GACAC,GACAU,GAZJ,OAQQO,EARR,OAeE/B,GACG8B,gBAAgB3C,GAAa0B,GAAiBC,GAAmBU,EAAU,CAC1EQ,SAAUC,YAAmBF,EAAmBlH,KAEjDqG,KAAK,SAAAgB,GACJ/D,EAAe+D,KApBrB,0CAzGkD,sBAgGlD7D,oBAAU,WAIR,OAHA0C,KACAhD,EAAQoE,GAAG,QAASpB,IAEb,WACLhD,EAAQqE,eAAe,QAASrB,MAEjC,CAACA,GAAiBhD,IA0BrB,IAAMsE,GAAI,SAAAC,GAAI,OAAI,kBAACxH,EAAD,KAAWwH,IAE7B,SAASC,KAMP,OALAnB,IAAQC,MAAM,CACZC,SAAU,oBACVC,OAAQ,SAIR,6BACE,6BACGtD,EAAE,kBADL,IACyBoE,GAAE,GAAD,OAAI/B,YAAgBK,GAAc,GAAI,GAAtC,SAD1B,IAC4E1C,EAAE,OAAQ,IACnFoE,GAAE,GAAD,OAAI/B,YAAgBM,GAAgBtE,GAAUmF,KAAKe,IAAIlG,GAAU,IAAjE,YAAwEkD,KAF5E,IAEwFvB,EAAE,YAE1F,kBAAClC,EAAD,KACGkC,EAAE,iBADL,IACwBoE,GAAE/B,YAAgBnB,GAAa,GAAI,IAD3D,IACiElB,EAAE,oBAEnE,kBAAClC,EAAD,KACGkC,EAAE,iBADL,IACwBoE,GAAE/B,YAAgBZ,GAAiB,GAAI,KAE/D,kBAAC3D,EAAD,KACGkC,EAAE,cADL,IACqBoE,GAAE/B,YAAgBG,GAAQ,GAAI,IADnD,QAC6DxC,EAAE,OAAQ,IACpEoE,GAAE/B,YAAgBI,GAAUpE,GAAUmF,KAAKe,IAAI,EAAGlG,MAFrD,IAEmEkD,KAsCzE,IAAMiD,GAAWjH,GAAUwC,EACrB0E,GAAyB,OAAfzD,EAEV0D,GAAaxG,EAAc2D,GAAoBC,GAAsBzD,IACrEsG,GAAqBzG,EAAc4D,GAAsBD,GAAoBxD,IAE7EuG,GAAcC,cAEpB,OACE,oCACE,kBAAC,IAAD,CACEC,MAAO9E,EAAE,cACT4E,YAAaA,GACbG,UAAWpD,IAjBjB,SAAuB3C,GACrB,MAAM,YAAN,OAAmBA,GAgBgBgG,CAAc3C,YAAgBV,GAAkB,GAAI,IACnFsD,qBAAsB,WACpB,GAAItD,GAAkB,CACpB,IAAMuD,EAAavD,GACfuD,EAAWzF,GAAGjD,SAAO+C,UAAUC,OACjCuB,EAASsB,YAAgB6C,EAAY,GAAI,IAAI,MAInDC,mBAAoBtE,EACpBuE,cAAerE,EACf/B,MAAOA,EACPqG,aAAcrE,EACdsE,qBAAsB1E,IAExB,kBAAC,IAAD,KACE,kBAAC1D,EAAD,KACE,kBAACG,EAAD,CAAWE,OAAQiH,GAAUe,IAAI,YAGrC,kBAAC,IAAD,CACET,MAAO9E,EAAE,UACT4E,YAAaA,GACbY,YAAgB9C,IAAgBC,GAAnB,WAAyC3C,EAAE,aAA3C,KAA6D,GAC1EyF,IAAI,yBACJC,YAAa,kBACRhD,IAAgBC,GACjB,kBAAClF,EAAD,KACE,kBAACC,EAAD,eACM2E,YAAgBK,GAAc,GAAI,GAAG,GAD3C,SAGA,kBAAC/E,EAAD,YACA,kBAACD,EAAD,eACM2E,YAAgBM,GAAgBtE,GAAUmF,KAAKe,IAAI,EAAGlG,KAD5D,YAC0EkD,MAI5E,kBAAC9D,EAAD,OAGJkI,oBAAkB,EAClBC,eAAa,IAEf,kBAAC,IAAD,CAAgBH,IAAI,+BAA+BI,YAAU,GAC3D,kBAACjI,EAAD,KACE,kBAACG,EAAD,KACE,kBAACC,EAAD,KAAegC,EAAE,iBAChB0E,GAAa,gDAAkBrC,YAAgBqC,GAAY,GAAI,GAAlD,YAAwDnD,KAAmB,OAE3F,kBAACxD,EAAD,KACE,kBAACC,EAAD,KAAegC,EAAE,iBAChB0E,GAAa,0CAAYnD,GAAZ,cAAwBc,YAAgBsC,GAAoB,GAAI,GAAhE,SAAmF,OAEnG,kBAAC5G,EAAD,KACE,kBAACC,EAAD,KAAegC,EAAE,oBAChB6B,IAAsBC,KAAyBzD,IAAyB,IAAbA,IAC1D,wCAAUgE,YAAgBR,GAAoB,GAAI,GAAlD,kBAA8DQ,YAC5DP,GACAzD,GACAmF,KAAKe,IAAIlG,GAAU,IAHrB,YAIKkD,KAEL,OAGJ,kBAACxD,EAAD,KACE,kBAACC,EAAD,KACGgC,EAAE,iBADL,KACyBoC,IAAgCA,GADzD,MAGCE,IAAeC,GACd,wCACMF,YAAgBC,GAAa,GAAI,GADvC,kBACmDD,YAC/CE,GACAlE,GACAmF,KAAKe,IAAIlG,GAAU,IAJvB,YAKOkD,KAGP,SA3HZ,WACE,IAAIuE,EAAiB,GACjBC,GAAU,EAcd,OAZI/E,GACF8E,EAAiB9E,EACjB+E,GAAU,GACAnF,GAAqC,QAAnBA,EAElBM,GAEAnB,IACV+F,EAAiB9F,EAAE,YACnB+F,GAAU,GAHVD,EAAiB9F,EAAE,kBAFnB8F,EAAiB9F,EAAE,mBASnB,kBAAC,IAAD,CACEyF,IAAI,eACJO,gBAAiBhG,EAAE,sBACnBiG,iBAAkBjG,EAAE,eACpB8F,eAAgBA,EAChBC,QAASA,EACTzB,yBAA0BA,KAyG3B4B,GACD,kBAACjI,EAAD,KACE,kBAAC,IAAD,CAAQkI,UAAW1B,GAAS2B,QA/RgB,6CAgSzCpG,EAAE,wB,iCChbb,oBAWeqG,IATM,SAAAC,GAAK,OACxB,uCAAKC,MAAM,MAAMC,OAAO,MAAMC,QAAQ,WAAWC,KAAK,gBAAmBJ,GACvE,0BACEK,EAAE,mGACFD,KAAK,oB,iiCCCX,IAAME,EAAiB9J,IAAOK,IAAV,IACT,gBAAG0J,EAAH,EAAGA,MAAO7J,EAAV,EAAUA,MAAV,OAAuB6J,EAAQ7J,EAAM8J,UAAY9J,EAAMQ,WAO5DuJ,EAAUjK,IAAOK,IAAV,IACS,qBAAGH,MAAkBgK,eAOrCC,EAA0BnK,IAAOK,IAAV,IACzB,qBAAGH,MAAkBI,eACd,qBAAGJ,MAAkBC,YAoB1BiK,EAAgBpK,YADA,SAAC,GAAD,EAAGiJ,QAAH,EAAYoB,oBAAZ,IAAoCC,EAApC,wDAA+C,kBAAC,IAAWA,IAC3DtK,CAAH,IAEL,qBAAGE,MAAkBC,YAK7BoK,EAAkBvK,YADA,SAAC,GAAD,EAAGiJ,QAAH,EAAYoB,oBAAZ,IAAoCC,EAApC,wDAA+C,kBAAC,IAAaA,IAC7DtK,CAAH,IAEP,qBAAGE,MAAkBC,YAI7BqK,E,2MAgBJC,MAAQ,CACNC,aAAa,G,+EAIb,OAAKC,KAAKF,MAAMC,YAIT,kBAACT,EAAD,KAAUU,KAAKnB,MAAMhC,4BAHnB,O,+BAMD,IAAD,SACgEmD,KAAKnB,MAApEN,EADD,EACCA,gBAAiBC,EADlB,EACkBA,iBAAkBH,EADpC,EACoCA,eAAgBC,EADpD,EACoDA,QAE3D,OAAID,EACK,kBAACc,EAAD,CAAgBC,MAAOd,GAAUD,GAIxC,oCACE,kBAACmB,EAAD,CACEb,QAAS,kBACP,EAAKsB,SAAS,SAAAC,GACZ,MAAO,CAAEH,aAAcG,EAAUH,iBAInCC,KAAKF,MAAMC,YAMX,oCACE,8BAAOvB,GACP,kBAACoB,EAAD,OAPF,oCACE,8BAAOrB,GACP,kBAACkB,EAAD,QASLO,KAAKG,qB,GAxDeC,aAAvBP,EAQGQ,aAAe,CACpB9B,gBAAiB,mBACjBC,iBAAkB,gBAClB3B,yBAHoB,aAIpBwB,eAAgB,GAChBC,SAAS,GAiDEuB","file":"static/js/6.03f187e2.chunk.js","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport ReactGA from 'react-ga'\nimport { createBrowserHistory } from 'history'\nimport { useWeb3Context } from 'web3-react'\nimport { ethers } from 'ethers'\nimport styled from 'styled-components'\n\nimport { Button } from '../../theme'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\nimport ContextualInfo from '../../components/ContextualInfo'\nimport OversizedPanel from '../../components/OversizedPanel'\nimport ArrowDown from '../../assets/svg/SVGArrowDown'\n\nimport { useExchangeContract } from '../../hooks'\nimport { useTransactionAdder } from '../../contexts/Transactions'\nimport { useTokenDetails } from '../../contexts/Tokens'\nimport { useAddressBalance } from '../../contexts/Balances'\nimport { useFetchAllBalances } from '../../contexts/AllBalances'\nimport { calculateGasMargin, amountFormatter } from '../../utils'\n\n// denominated in bips\nconst ALLOWED_SLIPPAGE = ethers.utils.bigNumberify(200)\n\n// denominated in seconds\nconst DEADLINE_FROM_NOW = 60 * 15\n\n// denominated in bips\nconst GAS_MARGIN = ethers.utils.bigNumberify(1000)\n\nconst BlueSpan = styled.span`\n  color: ${({ theme }) => theme.royalBlue};\n`\n\nconst DownArrowBackground = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap}\n  justify-content: center;\n  align-items: center;\n`\n\nconst DownArrow = styled(ArrowDown)`\n  ${({ theme }) => theme.flexRowNoWrap}\n  color: ${({ theme, active }) => (active ? theme.royalBlue : theme.doveGray)};\n  width: 0.625rem;\n  height: 0.625rem;\n  position: relative;\n  padding: 0.875rem;\n`\n\nconst RemoveLiquidityOutput = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap}\n  min-height: 3.5rem;\n`\n\nconst RemoveLiquidityOutputText = styled.div`\n  font-size: 1.25rem;\n  line-height: 1.5rem;\n  padding: 1rem 0.75rem;\n`\n\nconst RemoveLiquidityOutputPlus = styled.div`\n  font-size: 1.25rem;\n  line-height: 1.5rem;\n  padding: 1rem 0;\n`\n\nconst SummaryPanel = styled.div`\n  ${({ theme }) => theme.flexColumnNoWrap}\n  padding: 1rem 0;\n`\n\nconst LastSummaryText = styled.div`\n  margin-top: 1rem;\n`\n\nconst ExchangeRateWrapper = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap};\n  align-items: center;\n  color: ${({ theme }) => theme.doveGray};\n  font-size: 0.75rem;\n  padding: 0.25rem 1rem 0;\n`\n\nconst ExchangeRate = styled.span`\n  flex: 1 1 auto;\n  width: 0;\n  color: ${({ theme }) => theme.doveGray};\n`\n\nconst Flex = styled.div`\n  display: flex;\n  justify-content: center;\n  padding: 2rem;\n\n  button {\n    max-width: 20rem;\n  }\n`\n\nfunction getExchangeRate(inputValue, inputDecimals, outputValue, outputDecimals, invert = false) {\n  try {\n    if (\n      inputValue &&\n      (inputDecimals || inputDecimals === 0) &&\n      outputValue &&\n      (outputDecimals || outputDecimals === 0)\n    ) {\n      const factor = ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(18))\n\n      if (invert) {\n        return inputValue\n          .mul(factor)\n          .div(outputValue)\n          .mul(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(outputDecimals)))\n          .div(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(inputDecimals)))\n      } else {\n        return outputValue\n          .mul(factor)\n          .div(inputValue)\n          .mul(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(inputDecimals)))\n          .div(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(outputDecimals)))\n      }\n    }\n  } catch {}\n}\n\nfunction getMarketRate(reserveETH, reserveToken, decimals, invert = false) {\n  return getExchangeRate(reserveETH, 18, reserveToken, decimals, invert)\n}\n\nfunction calculateSlippageBounds(value) {\n  if (value) {\n    const offset = value.mul(ALLOWED_SLIPPAGE).div(ethers.utils.bigNumberify(10000))\n    const minimum = value.sub(offset)\n    const maximum = value.add(offset)\n    return {\n      minimum: minimum.lt(ethers.constants.Zero) ? ethers.constants.Zero : minimum,\n      maximum: maximum.gt(ethers.constants.MaxUint256) ? ethers.constants.MaxUint256 : maximum\n    }\n  } else {\n    return {}\n  }\n}\n\nexport default function RemoveLiquidity({ params }) {\n  const { library, account, active } = useWeb3Context()\n  const { t } = useTranslation()\n\n  const addTransaction = useTransactionAdder()\n\n  // clear url of query\n  useEffect(() => {\n    const history = createBrowserHistory()\n    history.push(window.location.pathname + '')\n  }, [])\n\n  const [outputCurrency, setOutputCurrency] = useState(params.poolTokenAddress)\n  const [value, setValue] = useState(params.poolTokenAmount ? params.poolTokenAmount : '')\n  const [inputError, setInputError] = useState()\n  const [valueParsed, setValueParsed] = useState()\n  // parse value\n  useEffect(() => {\n    try {\n      const parsedValue = ethers.utils.parseUnits(value, 18)\n      setValueParsed(parsedValue)\n    } catch {\n      if (value !== '') {\n        setInputError(t('inputNotValid'))\n      }\n    }\n\n    return () => {\n      setInputError()\n      setValueParsed()\n    }\n  }, [t, value])\n\n  const { symbol, decimals, exchangeAddress } = useTokenDetails(outputCurrency)\n\n  const [totalPoolTokens, setTotalPoolTokens] = useState()\n  const poolTokenBalance = useAddressBalance(account, exchangeAddress)\n  const exchangeETHBalance = useAddressBalance(exchangeAddress, 'ETH')\n  const exchangeTokenBalance = useAddressBalance(exchangeAddress, outputCurrency)\n\n  // input validation\n  useEffect(() => {\n    if (valueParsed && poolTokenBalance) {\n      if (valueParsed.gt(poolTokenBalance)) {\n        setInputError(t('insufficientBalance'))\n      } else {\n        setInputError(null)\n      }\n    }\n  }, [poolTokenBalance, t, valueParsed])\n\n  const exchange = useExchangeContract(exchangeAddress)\n\n  const ownershipPercentage =\n    poolTokenBalance && totalPoolTokens && !totalPoolTokens.isZero()\n      ? poolTokenBalance.mul(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(18))).div(totalPoolTokens)\n      : undefined\n  const ownershipPercentageFormatted = ownershipPercentage && amountFormatter(ownershipPercentage, 16, 4)\n\n  const ETHOwnShare =\n    exchangeETHBalance &&\n    ownershipPercentage &&\n    exchangeETHBalance.mul(ownershipPercentage).div(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(18)))\n  const TokenOwnShare =\n    exchangeTokenBalance &&\n    ownershipPercentage &&\n    exchangeTokenBalance.mul(ownershipPercentage).div(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(18)))\n\n  const ETHPer =\n    exchangeETHBalance && totalPoolTokens && !totalPoolTokens.isZero()\n      ? exchangeETHBalance.mul(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(18))).div(totalPoolTokens)\n      : undefined\n  const tokenPer =\n    exchangeTokenBalance && totalPoolTokens && !totalPoolTokens.isZero()\n      ? exchangeTokenBalance.mul(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(18))).div(totalPoolTokens)\n      : undefined\n\n  const ethWithdrawn =\n    ETHPer && valueParsed\n      ? ETHPer.mul(valueParsed).div(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(18)))\n      : undefined\n  const tokenWithdrawn =\n    tokenPer && valueParsed\n      ? tokenPer.mul(valueParsed).div(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(18)))\n      : undefined\n\n  const ethWithdrawnMin = ethWithdrawn ? calculateSlippageBounds(ethWithdrawn).minimum : undefined\n  const tokenWithdrawnMin = tokenWithdrawn ? calculateSlippageBounds(tokenWithdrawn).minimum : undefined\n\n  const fetchPoolTokens = useCallback(() => {\n    if (exchange) {\n      exchange.totalSupply().then(totalSupply => {\n        setTotalPoolTokens(totalSupply)\n      })\n    }\n  }, [exchange])\n  useEffect(() => {\n    fetchPoolTokens()\n    library.on('block', fetchPoolTokens)\n\n    return () => {\n      library.removeListener('block', fetchPoolTokens)\n    }\n  }, [fetchPoolTokens, library])\n\n  async function onRemoveLiquidity() {\n    ReactGA.event({\n      category: 'Pool',\n      action: 'RemoveLiquidity'\n    })\n\n    const deadline = Math.ceil(Date.now() / 1000) + DEADLINE_FROM_NOW\n\n    const estimatedGasLimit = await exchange.estimate.removeLiquidity(\n      valueParsed,\n      ethWithdrawnMin,\n      tokenWithdrawnMin,\n      deadline\n    )\n\n    exchange\n      .removeLiquidity(valueParsed, ethWithdrawnMin, tokenWithdrawnMin, deadline, {\n        gasLimit: calculateGasMargin(estimatedGasLimit, GAS_MARGIN)\n      })\n      .then(response => {\n        addTransaction(response)\n      })\n  }\n\n  const b = text => <BlueSpan>{text}</BlueSpan>\n\n  function renderTransactionDetails() {\n    ReactGA.event({\n      category: 'TransactionDetail',\n      action: 'Open'\n    })\n\n    return (\n      <div>\n        <div>\n          {t('youAreRemoving')} {b(`${amountFormatter(ethWithdrawn, 18, 4)} ETH`)} {t('and')}{' '}\n          {b(`${amountFormatter(tokenWithdrawn, decimals, Math.min(decimals, 4))} ${symbol}`)} {t('outPool')}\n        </div>\n        <LastSummaryText>\n          {t('youWillRemove')} {b(amountFormatter(valueParsed, 18, 4))} {t('liquidityTokens')}\n        </LastSummaryText>\n        <LastSummaryText>\n          {t('totalSupplyIs')} {b(amountFormatter(totalPoolTokens, 18, 4))}\n        </LastSummaryText>\n        <LastSummaryText>\n          {t('tokenWorth')} {b(amountFormatter(ETHPer, 18, 4))} ETH {t('and')}{' '}\n          {b(amountFormatter(tokenPer, decimals, Math.min(4, decimals)))} {symbol}\n        </LastSummaryText>\n      </div>\n    )\n  }\n\n  function renderSummary() {\n    let contextualInfo = ''\n    let isError = false\n\n    if (inputError) {\n      contextualInfo = inputError\n      isError = true\n    } else if (!outputCurrency || outputCurrency === 'ETH') {\n      contextualInfo = t('selectTokenCont')\n    } else if (!valueParsed) {\n      contextualInfo = t('enterValueCont')\n    } else if (!account) {\n      contextualInfo = t('noWallet')\n      isError = true\n    }\n\n    return (\n      <ContextualInfo\n        key=\"context-info\"\n        openDetailsText={t('transactionDetails')}\n        closeDetailsText={t('hideDetails')}\n        contextualInfo={contextualInfo}\n        isError={isError}\n        renderTransactionDetails={renderTransactionDetails}\n      />\n    )\n  }\n\n  function formatBalance(value) {\n    return `Balance: ${value}`\n  }\n\n  const isActive = active && account\n  const isValid = inputError === null\n\n  const marketRate = getMarketRate(exchangeETHBalance, exchangeTokenBalance, decimals)\n  const marketRateInverted = getMarketRate(exchangeTokenBalance, exchangeETHBalance, decimals)\n\n  const allBalances = useFetchAllBalances()\n\n  return (\n    <>\n      <CurrencyInputPanel\n        title={t('poolTokens')}\n        allBalances={allBalances}\n        extraText={poolTokenBalance && formatBalance(amountFormatter(poolTokenBalance, 18, 4))}\n        extraTextClickHander={() => {\n          if (poolTokenBalance) {\n            const valueToSet = poolTokenBalance\n            if (valueToSet.gt(ethers.constants.Zero)) {\n              setValue(amountFormatter(valueToSet, 18, 18, false))\n            }\n          }\n        }}\n        onCurrencySelected={setOutputCurrency}\n        onValueChange={setValue}\n        value={value}\n        errorMessage={inputError}\n        selectedTokenAddress={outputCurrency}\n      />\n      <OversizedPanel>\n        <DownArrowBackground>\n          <DownArrow active={isActive} alt=\"arrow\" />\n        </DownArrowBackground>\n      </OversizedPanel>\n      <CurrencyInputPanel\n        title={t('output')}\n        allBalances={allBalances}\n        description={!!(ethWithdrawn && tokenWithdrawn) ? `(${t('estimated')})` : ''}\n        key=\"remove-liquidity-input\"\n        renderInput={() =>\n          !!(ethWithdrawn && tokenWithdrawn) ? (\n            <RemoveLiquidityOutput>\n              <RemoveLiquidityOutputText>\n                {`${amountFormatter(ethWithdrawn, 18, 4, false)} ETH`}\n              </RemoveLiquidityOutputText>\n              <RemoveLiquidityOutputPlus> + </RemoveLiquidityOutputPlus>\n              <RemoveLiquidityOutputText>\n                {`${amountFormatter(tokenWithdrawn, decimals, Math.min(4, decimals))} ${symbol}`}\n              </RemoveLiquidityOutputText>\n            </RemoveLiquidityOutput>\n          ) : (\n            <RemoveLiquidityOutput />\n          )\n        }\n        disableTokenSelect\n        disableUnlock\n      />\n      <OversizedPanel key=\"remove-liquidity-input-under\" hideBottom>\n        <SummaryPanel>\n          <ExchangeRateWrapper>\n            <ExchangeRate>{t('exchangeRate')}</ExchangeRate>\n            {marketRate ? <span>{`1 ETH = ${amountFormatter(marketRate, 18, 7)} ${symbol}`}</span> : ' - '}\n          </ExchangeRateWrapper>\n          <ExchangeRateWrapper>\n            <ExchangeRate>{t('invertedRate')}</ExchangeRate>\n            {marketRate ? <span>{`1 ${symbol} = ${amountFormatter(marketRateInverted, 18, 7)} ETH`}</span> : ' - '}\n          </ExchangeRateWrapper>\n          <ExchangeRateWrapper>\n            <ExchangeRate>{t('currentPoolSize')}</ExchangeRate>\n            {exchangeETHBalance && exchangeTokenBalance && (decimals || decimals === 0) ? (\n              <span>{`${amountFormatter(exchangeETHBalance, 18, 4)} ETH + ${amountFormatter(\n                exchangeTokenBalance,\n                decimals,\n                Math.min(decimals, 4)\n              )} ${symbol}`}</span>\n            ) : (\n              ' - '\n            )}\n          </ExchangeRateWrapper>\n          <ExchangeRateWrapper>\n            <ExchangeRate>\n              {t('yourPoolShare')} ({ownershipPercentageFormatted && ownershipPercentageFormatted}%)\n            </ExchangeRate>\n            {ETHOwnShare && TokenOwnShare ? (\n              <span>\n                {`${amountFormatter(ETHOwnShare, 18, 4)} ETH + ${amountFormatter(\n                  TokenOwnShare,\n                  decimals,\n                  Math.min(decimals, 4)\n                )} ${symbol}`}\n              </span>\n            ) : (\n              ' - '\n            )}\n          </ExchangeRateWrapper>\n        </SummaryPanel>\n      </OversizedPanel>\n      {renderSummary()}\n      <Flex>\n        <Button disabled={!isValid} onClick={onRemoveLiquidity}>\n          {t('removeLiquidity')}\n        </Button>\n      </Flex>\n    </>\n  )\n}\n","import React from 'react'\n\nconst SVGArrowDown = props => (\n  <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 9 10\" fill=\"currentColor\" {...props}>\n    <path\n      d=\"M5.298 0H4.24v7.911h-.075L1.256 4.932l-.717.735L4.769 10 9 5.667l-.718-.735-2.908 2.979h-.076V0z\"\n      fill=\"currentColor\"\n    />\n  </svg>\n)\n\nexport default SVGArrowDown\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nimport { ReactComponent as Dropup } from '../../assets/images/dropup-blue.svg'\nimport { ReactComponent as Dropdown } from '../../assets/images/dropdown-blue.svg'\n\nconst SummaryWrapper = styled.div`\n  color: ${({ error, theme }) => (error ? theme.salmonRed : theme.doveGray)};\n  font-size: 0.75rem;\n  text-align: center;\n  margin-top: 1rem;\n  padding-top: 1rem;\n`\n\nconst Details = styled.div`\n  background-color: ${({ theme }) => theme.concreteGray};\n  padding: 1.5rem;\n  border-radius: 1rem;\n  font-size: 0.75rem;\n  margin-top: 1rem;\n`\n\nconst SummaryWrapperContainer = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap};\n  color: ${({ theme }) => theme.royalBlue};\n  text-align: center;\n  margin-top: 1rem;\n  padding-top: 1rem;\n  cursor: pointer;\n  align-items: center;\n  justify-content: center;\n  font-size: 0.75rem;\n\n  span {\n    margin-right: 12px;\n  }\n\n  img {\n    height: 0.75rem;\n    width: 0.75rem;\n  }\n`\n\nconst WrappedDropup = ({ isError, highSlippageWarning, ...rest }) => <Dropup {...rest} />\nconst ColoredDropup = styled(WrappedDropup)`\n  path {\n    stroke: ${({ theme }) => theme.royalBlue};\n  }\n`\n\nconst WrappedDropdown = ({ isError, highSlippageWarning, ...rest }) => <Dropdown {...rest} />\nconst ColoredDropdown = styled(WrappedDropdown)`\n  path {\n    stroke: ${({ theme }) => theme.royalBlue};\n  }\n`\n\nclass ContextualInfo extends Component {\n  static propTypes = {\n    openDetailsText: PropTypes.string,\n    renderTransactionDetails: PropTypes.func,\n    contextualInfo: PropTypes.string,\n    isError: PropTypes.bool\n  }\n\n  static defaultProps = {\n    openDetailsText: 'Advanced Details',\n    closeDetailsText: 'Hide Advanced',\n    renderTransactionDetails() {},\n    contextualInfo: '',\n    isError: false\n  }\n\n  state = {\n    showDetails: false\n  }\n\n  renderDetails() {\n    if (!this.state.showDetails) {\n      return null\n    }\n\n    return <Details>{this.props.renderTransactionDetails()}</Details>\n  }\n\n  render() {\n    const { openDetailsText, closeDetailsText, contextualInfo, isError } = this.props\n\n    if (contextualInfo) {\n      return <SummaryWrapper error={isError}>{contextualInfo}</SummaryWrapper>\n    }\n\n    return (\n      <>\n        <SummaryWrapperContainer\n          onClick={() =>\n            this.setState(prevState => {\n              return { showDetails: !prevState.showDetails }\n            })\n          }\n        >\n          {!this.state.showDetails ? (\n            <>\n              <span>{openDetailsText}</span>\n              <ColoredDropup />\n            </>\n          ) : (\n            <>\n              <span>{closeDetailsText}</span>\n              <ColoredDropdown />\n            </>\n          )}\n        </SummaryWrapperContainer>\n        {this.renderDetails()}\n      </>\n    )\n  }\n}\n\nexport default ContextualInfo\n"],"sourceRoot":""}