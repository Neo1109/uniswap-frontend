{"version":3,"sources":["assets/images/plus-blue.svg","pages/Pool/AddLiquidity.js","components/ContextualInfo/index.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","d","stroke","strokeLinecap","_ref","svgRef","title","props","width","height","viewBox","fill","ref","ForwardRef","forwardRef","INPUT","OUTPUT","ALLOWED_SLIPPAGE","ethers","utils","bigNumberify","DEADLINE_FROM_NOW","GAS_MARGIN","BlueSpan","styled","span","theme","royalBlue","NewExchangeWarning","div","NewExchangeWarningText","LastSummaryText","DownArrowBackground","flexRowNoWrap","SummaryPanel","flexColumnNoWrap","ExchangeRateWrapper","doveGray","ExchangeRate","Flex","ColoredWrappedPlus","isError","highSlippageWarning","rest","active","chaliceGray","calculateSlippageBounds","value","offset","mul","minimum","sub","maximum","add","lt","constants","Zero","gt","MaxUint256","initialAddLiquidityState","state","inputValue","ethAmountURL","outputValue","tokenAmountURL","lastEditedField","outputCurrency","tokenURL","addLiquidityStateReducer","action","type","payload","field","getMarketRate","reserveETH","reserveToken","decimals","inputDecimals","outputDecimals","invert","factor","pow","getExchangeRate","AddLiquidity","params","t","useTranslation","useWeb3Context","library","account","useEffect","createBrowserHistory","push","window","location","pathname","useReducer","ethAmount","tokenAmount","token","addLiquidityState","dispatchAddLiquidityState","inputCurrency","useState","inputValueParsed","setInputValueParsed","outputValueParsed","setOutputValueParsed","inputError","setInputError","outputError","setOutputError","useTokenDetails","symbol","exchangeAddress","exchangeContract","useExchangeContract","totalPoolTokens","setTotalPoolTokens","fetchPoolTokens","useCallback","totalSupply","then","on","removeListener","poolTokenBalance","useAddressBalance","exchangeETHBalance","exchangeTokenBalance","useExchangeReserves","isNewExchange","isZero","poolTokenPercentage","undefined","ethShare","tokenShare","liquidityMinted","inputBalance","outputBalance","ethPerLiquidityToken","tokenPerLiquidityToken","outputValueMax","liquidityTokensMin","marketRate","useMemo","marketRateInverted","renderTransactionDetails","ReactGA","event","category","b","text","amountFormatter","Math","min","addTransaction","useTransactionAdder","a","deadline","ceil","Date","now","estimate","addLiquidity","estimatedGasLimit","gasLimit","calculateGasMargin","response","formatBalance","parsedInputValue","parseUnits","parsedOutputValue","parsedValue","lte","gte","Error","currencyAmount","allowance","useAddressAllowance","showUnlock","setShowUnlock","isActive","isValid","allBalances","useFetchAllBalances","role","aria-label","CurrencyInputPanel","extraText","onValueChange","selectedTokenAddress","errorMessage","disableTokenSelect","OversizedPanel","alt","description","onCurrencySelected","hideBottom","contextualInfo","ContextualInfo","openDetailsText","closeDetailsText","renderSummary","disabled","onClick","SummaryWrapper","error","salmonRed","Details","concreteGray","SummaryWrapperContainer","ColoredDropup","ColoredDropdown","showDetails","setState","prevState","renderDetails","Component","defaultProps"],"mappings":"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","file":"static/js/8.19654dfa.chunk.js","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M1 6H6M11 6L6 6M6 1V6M6 6L6 11\",\n  stroke: \"#2F80ED\",\n  strokeLinecap: \"round\"\n});\n\nvar SvgPlusBlue = function SvgPlusBlue(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    width: 12,\n    height: 12,\n    viewBox: \"0 0 12 12\",\n    fill: \"none\",\n    ref: svgRef\n  }, props), React.createElement(\"title\", null, title), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgPlusBlue, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/plus-blue.e8021e51.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useReducer, useState, useCallback, useEffect, useMemo } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport { useWeb3Context } from 'web3-react'\nimport { createBrowserHistory } from 'history'\nimport { ethers } from 'ethers'\nimport ReactGA from 'react-ga'\nimport styled from 'styled-components'\n\nimport { Button } from '../../theme'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\nimport OversizedPanel from '../../components/OversizedPanel'\nimport ContextualInfo from '../../components/ContextualInfo'\nimport { ReactComponent as Plus } from '../../assets/images/plus-blue.svg'\n\nimport { useExchangeContract } from '../../hooks'\nimport { amountFormatter, calculateGasMargin } from '../../utils'\nimport { useTransactionAdder } from '../../contexts/Transactions'\nimport { useTokenDetails } from '../../contexts/Tokens'\nimport { useFetchAllBalances } from '../../contexts/AllBalances'\nimport { useAddressBalance, useExchangeReserves } from '../../contexts/Balances'\nimport { useAddressAllowance } from '../../contexts/Allowances'\n\nconst INPUT = 0\nconst OUTPUT = 1\n\n// denominated in bips\nconst ALLOWED_SLIPPAGE = ethers.utils.bigNumberify(200)\n\n// denominated in seconds\nconst DEADLINE_FROM_NOW = 60 * 15\n\n// denominated in bips\nconst GAS_MARGIN = ethers.utils.bigNumberify(1000)\n\nconst BlueSpan = styled.span`\n  color: ${({ theme }) => theme.royalBlue};\n`\n\nconst NewExchangeWarning = styled.div`\n  margin-top: 1rem;\n  padding: 1rem;\n  margin-bottom: 2rem;\n  border: 1px solid rgba($pizazz-orange, 0.4);\n  background-color: rgba($pizazz-orange, 0.1);\n  border-radius: 1rem;\n`\n\nconst NewExchangeWarningText = styled.div`\n  font-size: 0.75rem;\n  line-height: 1rem;\n  text-align: center;\n\n  :first-child {\n    padding-bottom: 0.3rem;\n    font-weight: 500;\n  }\n`\n\nconst LastSummaryText = styled.div`\n  margin-top: 1rem;\n`\n\nconst DownArrowBackground = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap}\n  justify-content: center;\n  align-items: center;\n`\nconst SummaryPanel = styled.div`\n  ${({ theme }) => theme.flexColumnNoWrap}\n  padding: 1rem 0;\n`\n\nconst ExchangeRateWrapper = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap};\n  align-items: center;\n  color: ${({ theme }) => theme.doveGray};\n  font-size: 0.75rem;\n  padding: 0.25rem 1rem 0;\n`\n\nconst ExchangeRate = styled.span`\n  flex: 1 1 auto;\n  width: 0;\n  color: ${({ theme }) => theme.doveGray};\n`\n\nconst Flex = styled.div`\n  display: flex;\n  justify-content: center;\n  padding: 2rem;\n\n  button {\n    max-width: 20rem;\n  }\n`\n\nconst WrappedPlus = ({ isError, highSlippageWarning, ...rest }) => <Plus {...rest} />\nconst ColoredWrappedPlus = styled(WrappedPlus)`\n  width: 0.625rem;\n  height: 0.625rem;\n  position: relative;\n  padding: 0.875rem;\n  path {\n    stroke: ${({ active, theme }) => (active ? theme.royalBlue : theme.chaliceGray)};\n  }\n`\n\nfunction calculateSlippageBounds(value) {\n  if (value) {\n    const offset = value.mul(ALLOWED_SLIPPAGE).div(ethers.utils.bigNumberify(10000))\n    const minimum = value.sub(offset)\n    const maximum = value.add(offset)\n    return {\n      minimum: minimum.lt(ethers.constants.Zero) ? ethers.constants.Zero : minimum,\n      maximum: maximum.gt(ethers.constants.MaxUint256) ? ethers.constants.MaxUint256 : maximum\n    }\n  } else {\n    return {}\n  }\n}\n\nfunction initialAddLiquidityState(state) {\n  return {\n    inputValue: state.ethAmountURL ? state.ethAmountURL : '',\n    outputValue: state.tokenAmountURL && !state.ethAmountURL ? state.tokenAmountURL : '',\n    lastEditedField: state.tokenAmountURL && state.ethAmountURL === '' ? OUTPUT : INPUT,\n    outputCurrency: state.tokenURL ? state.tokenURL : ''\n  }\n}\n\nfunction addLiquidityStateReducer(state, action) {\n  switch (action.type) {\n    case 'SELECT_CURRENCY': {\n      return {\n        ...state,\n        outputCurrency: action.payload\n      }\n    }\n    case 'UPDATE_VALUE': {\n      const { inputValue, outputValue } = state\n      const { field, value } = action.payload\n      return {\n        ...state,\n        inputValue: field === INPUT ? value : inputValue,\n        outputValue: field === OUTPUT ? value : outputValue,\n        lastEditedField: field\n      }\n    }\n    case 'UPDATE_DEPENDENT_VALUE': {\n      const { inputValue, outputValue } = state\n      const { field, value } = action.payload\n      return {\n        ...state,\n        inputValue: field === INPUT ? value : inputValue,\n        outputValue: field === OUTPUT ? value : outputValue\n      }\n    }\n    default: {\n      return initialAddLiquidityState()\n    }\n  }\n}\n\nfunction getExchangeRate(inputValue, inputDecimals, outputValue, outputDecimals, invert = false) {\n  try {\n    if (\n      inputValue &&\n      (inputDecimals || inputDecimals === 0) &&\n      outputValue &&\n      (outputDecimals || outputDecimals === 0)\n    ) {\n      const factor = ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(18))\n\n      if (invert) {\n        return inputValue\n          .mul(factor)\n          .div(outputValue)\n          .mul(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(outputDecimals)))\n          .div(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(inputDecimals)))\n      } else {\n        return outputValue\n          .mul(factor)\n          .div(inputValue)\n          .mul(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(inputDecimals)))\n          .div(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(outputDecimals)))\n      }\n    }\n  } catch {}\n}\n\nfunction getMarketRate(reserveETH, reserveToken, decimals, invert = false) {\n  return getExchangeRate(reserveETH, 18, reserveToken, decimals, invert)\n}\n\nexport default function AddLiquidity({ params }) {\n  const { t } = useTranslation()\n  const { library, active, account } = useWeb3Context()\n\n  // clear url of query\n  useEffect(() => {\n    const history = createBrowserHistory()\n    history.push(window.location.pathname + '')\n  }, [])\n\n  const [addLiquidityState, dispatchAddLiquidityState] = useReducer(\n    addLiquidityStateReducer,\n    { ethAmountURL: params.ethAmount, tokenAmountURL: params.tokenAmount, tokenURL: params.token },\n    initialAddLiquidityState\n  )\n  const { inputValue, outputValue, lastEditedField, outputCurrency } = addLiquidityState\n  const inputCurrency = 'ETH'\n\n  const [inputValueParsed, setInputValueParsed] = useState()\n  const [outputValueParsed, setOutputValueParsed] = useState()\n  const [inputError, setInputError] = useState()\n  const [outputError, setOutputError] = useState()\n\n  const { symbol, decimals, exchangeAddress } = useTokenDetails(outputCurrency)\n  const exchangeContract = useExchangeContract(exchangeAddress)\n\n  const [totalPoolTokens, setTotalPoolTokens] = useState()\n  const fetchPoolTokens = useCallback(() => {\n    if (exchangeContract) {\n      exchangeContract.totalSupply().then(totalSupply => {\n        setTotalPoolTokens(totalSupply)\n      })\n    }\n  }, [exchangeContract])\n  useEffect(() => {\n    fetchPoolTokens()\n    library.on('block', fetchPoolTokens)\n\n    return () => {\n      library.removeListener('block', fetchPoolTokens)\n    }\n  }, [fetchPoolTokens, library])\n\n  const poolTokenBalance = useAddressBalance(account, exchangeAddress)\n  const exchangeETHBalance = useAddressBalance(exchangeAddress, 'ETH')\n  const exchangeTokenBalance = useAddressBalance(exchangeAddress, outputCurrency)\n\n  const { reserveETH, reserveToken } = useExchangeReserves(outputCurrency)\n  const isNewExchange = !!(reserveETH && reserveToken && reserveETH.isZero() && reserveToken.isZero())\n\n  // 18 decimals\n  const poolTokenPercentage =\n    poolTokenBalance && totalPoolTokens && isNewExchange === false && !totalPoolTokens.isZero()\n      ? poolTokenBalance.mul(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(18))).div(totalPoolTokens)\n      : undefined\n  const ethShare =\n    exchangeETHBalance && poolTokenPercentage\n      ? exchangeETHBalance\n          .mul(poolTokenPercentage)\n          .div(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(18)))\n      : undefined\n  const tokenShare =\n    exchangeTokenBalance && poolTokenPercentage\n      ? exchangeTokenBalance\n          .mul(poolTokenPercentage)\n          .div(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(18)))\n      : undefined\n\n  const liquidityMinted = isNewExchange\n    ? inputValueParsed\n    : totalPoolTokens && inputValueParsed && exchangeETHBalance && !exchangeETHBalance.isZero()\n    ? totalPoolTokens.mul(inputValueParsed).div(exchangeETHBalance)\n    : undefined\n\n  // user balances\n  const inputBalance = useAddressBalance(account, inputCurrency)\n  const outputBalance = useAddressBalance(account, outputCurrency)\n\n  const ethPerLiquidityToken =\n    exchangeETHBalance && totalPoolTokens && isNewExchange === false && !totalPoolTokens.isZero()\n      ? exchangeETHBalance.mul(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(18))).div(totalPoolTokens)\n      : undefined\n  const tokenPerLiquidityToken =\n    exchangeTokenBalance && totalPoolTokens && isNewExchange === false && !totalPoolTokens.isZero()\n      ? exchangeTokenBalance.mul(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(18))).div(totalPoolTokens)\n      : undefined\n\n  const outputValueMax = outputValueParsed && calculateSlippageBounds(outputValueParsed).maximum\n  const liquidityTokensMin = liquidityMinted && calculateSlippageBounds(liquidityMinted).minimum\n\n  const marketRate = useMemo(() => {\n    return getMarketRate(reserveETH, reserveToken, decimals)\n  }, [reserveETH, reserveToken, decimals])\n  const marketRateInverted = useMemo(() => {\n    return getMarketRate(reserveETH, reserveToken, decimals, true)\n  }, [reserveETH, reserveToken, decimals])\n\n  function renderTransactionDetails() {\n    ReactGA.event({\n      category: 'TransactionDetail',\n      action: 'Open'\n    })\n\n    const b = text => <BlueSpan>{text}</BlueSpan>\n\n    if (isNewExchange) {\n      return (\n        <div>\n          <div>\n            {t('youAreAdding')} {b(`${inputValue} ETH`)} {t('and')} {b(`${outputValue} ${symbol}`)} {t('intoPool')}\n          </div>\n          <LastSummaryText>\n            {t('youAreSettingExRate')}{' '}\n            {b(\n              `1 ETH = ${amountFormatter(\n                getMarketRate(inputValueParsed, outputValueParsed, decimals),\n                18,\n                4,\n                false\n              )} ${symbol}`\n            )}\n            .\n          </LastSummaryText>\n          <LastSummaryText>\n            {t('youWillMint')} {b(`${inputValue}`)} {t('liquidityTokens')}\n          </LastSummaryText>\n          <LastSummaryText>{t('totalSupplyIs0')}</LastSummaryText>\n        </div>\n      )\n    } else {\n      return (\n        <>\n          <div>\n            {t('youAreAdding')} {b(`${amountFormatter(inputValueParsed, 18, 4)} ETH`)} {t('and')} {'at most'}{' '}\n            {b(`${amountFormatter(outputValueMax, decimals, Math.min(decimals, 4))} ${symbol}`)} {t('intoPool')}\n          </div>\n          <LastSummaryText>\n            {t('youWillMint')} {b(amountFormatter(liquidityMinted, 18, 4))} {t('liquidityTokens')}\n          </LastSummaryText>\n          <LastSummaryText>\n            {t('totalSupplyIs')} {b(amountFormatter(totalPoolTokens, 18, 4))}\n          </LastSummaryText>\n          <LastSummaryText>\n            {t('tokenWorth')} {b(amountFormatter(ethPerLiquidityToken, 18, 4))} ETH {t('and')}{' '}\n            {b(amountFormatter(tokenPerLiquidityToken, decimals, Math.min(decimals, 4)))} {symbol}\n          </LastSummaryText>\n        </>\n      )\n    }\n  }\n\n  function renderSummary() {\n    let contextualInfo = ''\n    let isError = false\n\n    if (inputError || outputError) {\n      contextualInfo = inputError || outputError\n      isError = true\n    } else if (!inputCurrency || !outputCurrency) {\n      contextualInfo = t('selectTokenCont')\n    } else if (!inputValue) {\n      contextualInfo = t('enterValueCont')\n    } else if (!account) {\n      contextualInfo = t('noWallet')\n      isError = true\n    }\n\n    return (\n      <ContextualInfo\n        openDetailsText={t('transactionDetails')}\n        closeDetailsText={t('hideDetails')}\n        contextualInfo={contextualInfo}\n        isError={isError}\n        renderTransactionDetails={renderTransactionDetails}\n      />\n    )\n  }\n\n  const addTransaction = useTransactionAdder()\n\n  async function onAddLiquidity() {\n    ReactGA.event({\n      category: 'Pool',\n      action: 'AddLiquidity'\n    })\n\n    const deadline = Math.ceil(Date.now() / 1000) + DEADLINE_FROM_NOW\n\n    const estimatedGasLimit = await exchangeContract.estimate.addLiquidity(\n      isNewExchange ? ethers.constants.Zero : liquidityTokensMin,\n      isNewExchange ? outputValueParsed : outputValueMax,\n      deadline,\n      {\n        value: inputValueParsed\n      }\n    )\n\n    const gasLimit = calculateGasMargin(estimatedGasLimit, GAS_MARGIN)\n\n    exchangeContract\n      .addLiquidity(\n        isNewExchange ? ethers.constants.Zero : liquidityTokensMin,\n        isNewExchange ? outputValueParsed : outputValueMax,\n        deadline,\n        {\n          value: inputValueParsed,\n          gasLimit\n        }\n      )\n      .then(response => {\n        addTransaction(response)\n      })\n  }\n\n  function formatBalance(value) {\n    return `Balance: ${value}`\n  }\n\n  useEffect(() => {\n    if (isNewExchange) {\n      if (inputValue) {\n        const parsedInputValue = ethers.utils.parseUnits(inputValue, 18)\n        setInputValueParsed(parsedInputValue)\n      }\n\n      if (outputValue) {\n        const parsedOutputValue = ethers.utils.parseUnits(outputValue, decimals)\n        setOutputValueParsed(parsedOutputValue)\n      }\n    }\n  }, [decimals, inputValue, isNewExchange, outputValue])\n\n  // parse input value\n  useEffect(() => {\n    if (\n      isNewExchange === false &&\n      inputValue &&\n      marketRate &&\n      lastEditedField === INPUT &&\n      (decimals || decimals === 0)\n    ) {\n      try {\n        const parsedValue = ethers.utils.parseUnits(inputValue, 18)\n\n        if (parsedValue.lte(ethers.constants.Zero) || parsedValue.gte(ethers.constants.MaxUint256)) {\n          throw Error()\n        }\n\n        setInputValueParsed(parsedValue)\n\n        const currencyAmount = marketRate\n          .mul(parsedValue)\n          .div(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(18)))\n          .div(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(18 - decimals)))\n\n        setOutputValueParsed(currencyAmount)\n        dispatchAddLiquidityState({\n          type: 'UPDATE_DEPENDENT_VALUE',\n          payload: { field: OUTPUT, value: amountFormatter(currencyAmount, decimals, Math.min(decimals, 4), false) }\n        })\n\n        return () => {\n          setOutputError()\n          setInputValueParsed()\n          setOutputValueParsed()\n          dispatchAddLiquidityState({\n            type: 'UPDATE_DEPENDENT_VALUE',\n            payload: { field: OUTPUT, value: '' }\n          })\n        }\n      } catch {\n        setOutputError(t('inputNotValid'))\n      }\n    }\n  }, [inputValue, isNewExchange, lastEditedField, marketRate, decimals, t])\n\n  // parse output value\n  useEffect(() => {\n    if (\n      isNewExchange === false &&\n      outputValue &&\n      marketRateInverted &&\n      lastEditedField === OUTPUT &&\n      (decimals || decimals === 0)\n    ) {\n      try {\n        const parsedValue = ethers.utils.parseUnits(outputValue, decimals)\n\n        if (parsedValue.lte(ethers.constants.Zero) || parsedValue.gte(ethers.constants.MaxUint256)) {\n          throw Error()\n        }\n\n        setOutputValueParsed(parsedValue)\n\n        const currencyAmount = marketRateInverted\n          .mul(parsedValue)\n          .div(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(decimals)))\n\n        setInputValueParsed(currencyAmount)\n        dispatchAddLiquidityState({\n          type: 'UPDATE_DEPENDENT_VALUE',\n          payload: { field: INPUT, value: amountFormatter(currencyAmount, 18, 4, false) }\n        })\n\n        return () => {\n          setInputError()\n          setOutputValueParsed()\n          setInputValueParsed()\n          dispatchAddLiquidityState({\n            type: 'UPDATE_DEPENDENT_VALUE',\n            payload: { field: INPUT, value: '' }\n          })\n        }\n      } catch {\n        setInputError(t('inputNotValid'))\n      }\n    }\n  }, [outputValue, isNewExchange, lastEditedField, marketRateInverted, decimals, t])\n\n  // input validation\n  useEffect(() => {\n    if (inputValueParsed && inputBalance) {\n      if (inputValueParsed.gt(inputBalance)) {\n        setInputError(t('insufficientBalance'))\n      } else {\n        setInputError(null)\n      }\n    }\n\n    if (outputValueMax && outputBalance) {\n      if (outputValueMax.gt(outputBalance)) {\n        setOutputError(t('insufficientBalance'))\n      } else {\n        setOutputError(null)\n      }\n    }\n  }, [inputValueParsed, inputBalance, outputValueMax, outputBalance, t])\n\n  const allowance = useAddressAllowance(account, outputCurrency, exchangeAddress)\n  const [showUnlock, setShowUnlock] = useState(false)\n  useEffect(() => {\n    if (outputValueParsed && allowance) {\n      if (allowance.lt(outputValueParsed)) {\n        setOutputError(t('unlockTokenCont'))\n        setShowUnlock(true)\n      }\n      return () => {\n        setOutputError()\n        setShowUnlock(false)\n      }\n    }\n  }, [outputValueParsed, allowance, t])\n\n  const isActive = active && account\n  const isValid = (inputError === null || outputError === null) && !showUnlock\n\n  const allBalances = useFetchAllBalances()\n\n  return (\n    <>\n      {isNewExchange ? (\n        <NewExchangeWarning>\n          <NewExchangeWarningText>\n            <span role=\"img\" aria-label=\"first-liquidity\">\n              🚰\n            </span>{' '}\n            {t('firstLiquidity')}\n          </NewExchangeWarningText>\n          <NewExchangeWarningText>{t('initialExchangeRate', { symbol })}</NewExchangeWarningText>\n        </NewExchangeWarning>\n      ) : null}\n\n      <CurrencyInputPanel\n        title={t('deposit')}\n        allBalances={allBalances}\n        extraText={inputBalance && formatBalance(amountFormatter(inputBalance, 18, 4))}\n        onValueChange={inputValue => {\n          dispatchAddLiquidityState({ type: 'UPDATE_VALUE', payload: { value: inputValue, field: INPUT } })\n        }}\n        selectedTokenAddress=\"ETH\"\n        value={inputValue}\n        errorMessage={inputError}\n        disableTokenSelect\n      />\n      <OversizedPanel>\n        <DownArrowBackground>\n          <ColoredWrappedPlus active={isActive} alt=\"plus\" />\n        </DownArrowBackground>\n      </OversizedPanel>\n      <CurrencyInputPanel\n        title={t('deposit')}\n        allBalances={allBalances}\n        description={isNewExchange ? '' : outputValue ? `(${t('estimated')})` : ''}\n        extraText={outputBalance && formatBalance(amountFormatter(outputBalance, decimals, Math.min(decimals, 4)))}\n        selectedTokenAddress={outputCurrency}\n        onCurrencySelected={outputCurrency => {\n          dispatchAddLiquidityState({ type: 'SELECT_CURRENCY', payload: outputCurrency })\n        }}\n        onValueChange={outputValue => {\n          dispatchAddLiquidityState({ type: 'UPDATE_VALUE', payload: { value: outputValue, field: OUTPUT } })\n        }}\n        value={outputValue}\n        showUnlock={showUnlock}\n        errorMessage={outputError}\n      />\n      <OversizedPanel hideBottom>\n        <SummaryPanel>\n          <ExchangeRateWrapper>\n            <ExchangeRate>{t('exchangeRate')}</ExchangeRate>\n            <span>{marketRate ? `1 ETH = ${amountFormatter(marketRate, 18, 7)} ${symbol}` : ' - '}</span>\n          </ExchangeRateWrapper>\n          <ExchangeRateWrapper>\n            <ExchangeRate>{t('invertedRate')}</ExchangeRate>\n            <span>{marketRate ? `1 ${symbol} = ${amountFormatter(marketRateInverted, 18, 7)} ETH` : ' - '}</span>\n          </ExchangeRateWrapper>\n          <ExchangeRateWrapper>\n            <ExchangeRate>{t('currentPoolSize')}</ExchangeRate>\n            <span>\n              {exchangeETHBalance && exchangeTokenBalance\n                ? `${amountFormatter(exchangeETHBalance, 18, 4)} ETH + ${amountFormatter(\n                    exchangeTokenBalance,\n                    decimals,\n                    Math.min(4, decimals)\n                  )} ${symbol}`\n                : ' - '}\n            </span>\n          </ExchangeRateWrapper>\n          <ExchangeRateWrapper>\n            <ExchangeRate>\n              {t('yourPoolShare')} ({exchangeETHBalance && amountFormatter(poolTokenPercentage, 16, 2)}%)\n            </ExchangeRate>\n            <span>\n              {ethShare && tokenShare\n                ? `${amountFormatter(ethShare, 18, 4)} ETH + ${amountFormatter(\n                    tokenShare,\n                    decimals,\n                    Math.min(4, decimals)\n                  )} ${symbol}`\n                : ' - '}\n            </span>\n          </ExchangeRateWrapper>\n        </SummaryPanel>\n      </OversizedPanel>\n      {renderSummary()}\n      <Flex>\n        <Button disabled={!isValid} onClick={onAddLiquidity}>\n          {t('addLiquidity')}\n        </Button>\n      </Flex>\n    </>\n  )\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nimport { ReactComponent as Dropup } from '../../assets/images/dropup-blue.svg'\nimport { ReactComponent as Dropdown } from '../../assets/images/dropdown-blue.svg'\n\nconst SummaryWrapper = styled.div`\n  color: ${({ error, theme }) => (error ? theme.salmonRed : theme.doveGray)};\n  font-size: 0.75rem;\n  text-align: center;\n  margin-top: 1rem;\n  padding-top: 1rem;\n`\n\nconst Details = styled.div`\n  background-color: ${({ theme }) => theme.concreteGray};\n  padding: 1.5rem;\n  border-radius: 1rem;\n  font-size: 0.75rem;\n  margin-top: 1rem;\n`\n\nconst SummaryWrapperContainer = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap};\n  color: ${({ theme }) => theme.royalBlue};\n  text-align: center;\n  margin-top: 1rem;\n  padding-top: 1rem;\n  cursor: pointer;\n  align-items: center;\n  justify-content: center;\n  font-size: 0.75rem;\n\n  span {\n    margin-right: 12px;\n  }\n\n  img {\n    height: 0.75rem;\n    width: 0.75rem;\n  }\n`\n\nconst WrappedDropup = ({ isError, highSlippageWarning, ...rest }) => <Dropup {...rest} />\nconst ColoredDropup = styled(WrappedDropup)`\n  path {\n    stroke: ${({ theme }) => theme.royalBlue};\n  }\n`\n\nconst WrappedDropdown = ({ isError, highSlippageWarning, ...rest }) => <Dropdown {...rest} />\nconst ColoredDropdown = styled(WrappedDropdown)`\n  path {\n    stroke: ${({ theme }) => theme.royalBlue};\n  }\n`\n\nclass ContextualInfo extends Component {\n  static propTypes = {\n    openDetailsText: PropTypes.string,\n    renderTransactionDetails: PropTypes.func,\n    contextualInfo: PropTypes.string,\n    isError: PropTypes.bool\n  }\n\n  static defaultProps = {\n    openDetailsText: 'Advanced Details',\n    closeDetailsText: 'Hide Advanced',\n    renderTransactionDetails() {},\n    contextualInfo: '',\n    isError: false\n  }\n\n  state = {\n    showDetails: false\n  }\n\n  renderDetails() {\n    if (!this.state.showDetails) {\n      return null\n    }\n\n    return <Details>{this.props.renderTransactionDetails()}</Details>\n  }\n\n  render() {\n    const { openDetailsText, closeDetailsText, contextualInfo, isError } = this.props\n\n    if (contextualInfo) {\n      return <SummaryWrapper error={isError}>{contextualInfo}</SummaryWrapper>\n    }\n\n    return (\n      <>\n        <SummaryWrapperContainer\n          onClick={() =>\n            this.setState(prevState => {\n              return { showDetails: !prevState.showDetails }\n            })\n          }\n        >\n          {!this.state.showDetails ? (\n            <>\n              <span>{openDetailsText}</span>\n              <ColoredDropup />\n            </>\n          ) : (\n            <>\n              <span>{closeDetailsText}</span>\n              <ColoredDropdown />\n            </>\n          )}\n        </SummaryWrapperContainer>\n        {this.renderDetails()}\n      </>\n    )\n  }\n}\n\nexport default ContextualInfo\n"],"sourceRoot":""}